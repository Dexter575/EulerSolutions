//Problem 2
//Even Fibonacci numbers


// ---Problem Statement
// ---Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// ---1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// ---By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

// ---Solution_1
// ---Starting from 1 and 2 (starting two numbers), Generate Fibonacci sequence upto a given range
// ---Sum Even valued terms


#include "bits/stdc++.h"           //is a Header File Includes every SL
#include <iostream>
#include <stdio.h>

using namespace std;

vector<int> generate_fibonacci_seq(int start_n_1, int start_n_2, int range)
{   
    int current_element = 0;
    //Initalize a vector container
    vector<int> vect{start_n_1, start_n_2};            //an array of ints
    for(int i = 2; i<range; i++)
    {
        current_element = vect[i-2] +vect[i-1];
        vect.insert(vect.end(), 1, current_element);
    }
    return vect;
}



int print_vect(vector<int> vect)
{
    //Display the vectors (multiples)
    cout<<"Fibonacci Series is : " <<endl;

        for(int i = 0; i < vect.size(); i++)
        {
            cout<<" " <<vect[i];
        }
        cout<<endl;
    return 0;
}


int calculate_even_fibonacci_seq_sum(vector<int> vect)
{
    int sum=0;
    for(int i =0; i<vect.size(); i++)
    {
        if(vect[i] %2 == 0)
        {
            sum += vect[i];
        }
    }
    return sum;
}
int main()
{
    //Initalizing a vector
    vector<int> vect = generate_fibonacci_seq(1, 2, 10);
    
    //Print Fibonacci Sequence
    print_vect(vect);
    
    //Print Sum of Even valued terms of fibonacci sequence
    cout<<"Even Valued Sum (upto range) is: "<<calculate_even_fibonacci_seq_sum(vect);

    return 0;
}